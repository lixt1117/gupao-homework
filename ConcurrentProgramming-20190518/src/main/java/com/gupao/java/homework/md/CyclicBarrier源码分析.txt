CyclicBarrier源码分析：
=============================================================================================
和其他并发工具不同，CyclicBarrier的基本使用只需要用到一个await方法，它不需要通过手动的release，因为CyclicBarrier是
利用ReentrantLock和Condition来实现的，await方法本身就是一个重入锁的加锁-解锁的过程。

CyclicBarrier允许一组线程全部达到某种状态然后再继续执行，这里的某种状态其实就是有指定数量的线程执行到了await方法，这些
线程通过重入锁一个个的进来，当到达await方法的线程数小于指定数量时，线程会被condition.await，从而转到wait队列中，
当线程数达到指定数量时，wait队列中的线程会被唤醒。

当然，CyclicBarrier在初始化的时候也允许设置一个Runnable实现类，在线程组达到指定数量时，会由最后进来的线程先执行一遍
给定类的run方法，再去唤醒wait中的线程。